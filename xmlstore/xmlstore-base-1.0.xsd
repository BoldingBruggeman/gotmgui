<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
	<xs:simpleType name="versiontype">
		<xs:restriction base="xs:string">
			<xs:pattern value="(.+-)?[\d\.]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="nametype">
		<xs:restriction base="xs:string">
			<xs:pattern value="[^/\s[\]]+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="labeltype">
		<xs:restriction base="xs:string">
			<xs:maxLength value="80"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="datatype">
		<xs:restriction base="xs:string">
			<xs:pattern value="\w+"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="basedatatype">
		<xs:restriction base="xs:string">
			<xs:enumeration value="string"/>
			<xs:enumeration value="int"/>
			<xs:enumeration value="float"/>
			<xs:enumeration value="bool"/>
			<xs:enumeration value="datetime"/>
			<xs:enumeration value="duration"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="datafiletype">
			<xs:restriction base="xs:string">
			<xs:enumeration value="pointsintime"/>
			<xs:enumeration value="profilesintime"/>
			<xs:enumeration value="singleprofile"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="datafiledatatype">
		<xs:restriction base="xs:string">
			<xs:enumeration value="float64"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="axis">
		<xs:restriction base="xs:string">
			<xs:enumeration value="x"/>
			<xs:enumeration value="y"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="conditiontype">
		<xs:restriction base="xs:string">
			<xs:enumeration value="and"/>
			<xs:enumeration value="or"/>
			<xs:enumeration value="eq"/>
			<xs:enumeration value="ne"/>
		</xs:restriction>
	</xs:simpleType>
	
	<xs:element name="condition">
		<xs:complexType>
			<xs:sequence>
				<xs:element ref="condition" minOccurs="0" maxOccurs="unbounded" />
			</xs:sequence>
			<xs:attribute name="type"     type="conditiontype" use="required">
				<xs:annotation>
					<xs:documentation>Condition type.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="variable" type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Location of the dependent variable. Relative paths can be used, and in that case these are relative to the container of the node to which the condition applies.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="value"    type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Value of the dependent variable to check against.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
			<xs:attribute name="source"   type="xs:string" use="optional">
				<xs:annotation>
					<xs:documentation>Name of the attached store in which the dependent variable may be found. Usage of this attribute requires that the store is always attached to another by custom code.</xs:documentation>
				</xs:annotation>
			</xs:attribute>
		</xs:complexType>
	</xs:element>

	<xs:element name="option">
		<xs:complexType>
			<xs:attribute name="value"       type="xs:string" use="required" />
			<xs:attribute name="label"       type="labeltype" use="optional" />
			<xs:attribute name="description" type="xs:string" use="optional" />
			<xs:attribute name="disabled"    type="xs:string" use="optional" fixed="True"/>
		</xs:complexType>
	</xs:element>

	<xs:complexType name="elementtype">
		<xs:sequence>
			<xs:element ref="condition" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Makes the appearance of the element conditional on the value of one or more other elements.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="options" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Adds a list of predefined values that the element can take.</xs:documentation>
				</xs:annotation>
				<xs:complexType>
					<xs:sequence>
						<xs:element ref="option" maxOccurs="unbounded"/>
					</xs:sequence>
				</xs:complexType>
			</xs:element>
			<xs:element name="template" minOccurs="0" maxOccurs="unbounded">
				<xs:complexType>
					<xs:complexContent>
						<xs:extension base="elementtype">
							<xs:attribute name="id" type="xs:string" use="required"/>
						</xs:extension>
					</xs:complexContent>
				</xs:complexType>
			</xs:element>
			<xs:choice minOccurs="0" maxOccurs="unbounded">
				<xs:element ref="element" />
				<xs:element name="link">
					<xs:complexType>
						<xs:complexContent>
							<xs:extension base="elementtype">
								<xs:attribute name="name" type="nametype" use="optional">
									<xs:annotation>
										<xs:documentation>Name used to identify the element. It must be unique among its siblings, and cannot contain whitespace, slashes and square brackets.</xs:documentation>
									</xs:annotation>
								</xs:attribute>
								<xs:attribute name="template" type="xs:string"/>
								<xs:attribute name="path" type="xs:string"/>
							</xs:extension>
						</xs:complexContent>
					</xs:complexType>
				</xs:element>
			</xs:choice>
		</xs:sequence>
		<xs:attribute name="label" type="labeltype" use="optional">
			<xs:annotation>
				<xs:documentation>Descriptive short label.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="description" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Long description. This description will typically be shown on its own (for instance in a tooltip), without the element name or label. The label is therefore often repeated in the description.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="unit" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Unit of the value of the element. This is typically only used for elements that contain numerical values.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="type" type="datatype" use="optional">
			<xs:annotation>
				<xs:documentation>Data type of the element. This is a required attribute unless the element serves only as container for child nodes.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minInclusive" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Minimum allowed value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maxInclusive" type="xs:string" use="optional">
			<xs:annotation>
				<xs:documentation>Maximum allowed value.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="minOccurs" use="optional" type="xs:nonNegativeInteger">
			<xs:annotation>
				<xs:documentation>Minimum number of times that the node must be present.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="maxOccurs" use="optional">
			<xs:annotation>
				<xs:documentation>Maximum number of times that the node can be present.</xs:documentation>
			</xs:annotation>
			<xs:simpleType>
				<xs:union memberTypes="xs:nonNegativeInteger">
					<xs:simpleType>
						<xs:restriction base="xs:NMTOKEN">
							<xs:enumeration value="unbounded"/>
						</xs:restriction>
					</xs:simpleType>
				</xs:union>
			</xs:simpleType>
		</xs:attribute>
		<xs:attribute name="grouponly" type="xs:string" use="optional" fixed="True">
			<xs:annotation>
				<xs:documentation>Whether to prevent display of this element as a separate level in the hierarchy. If set to True, children of this element will appear as children of this element's parent, and the element itself will be invisible.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="hidden" type="xs:string" use="optional" fixed="True">
			<xs:annotation>
				<xs:documentation>Whether to always hide this element from view.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="editable" type="xs:string" use="optional" fixed="True">
			<xs:annotation>
				<xs:documentation>Whether the element can take custom values in addition to a prespecified list of options. Only used if the "options" node is present.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
		<xs:attribute name="version" type="versiontype" use="optional">
			<xs:annotation>
				<xs:documentation>Version identifier. This is a required attribute of the root element, and cannot be used on any other element.</xs:documentation>
			</xs:annotation>
		</xs:attribute>
	</xs:complexType>

	<xs:element name="element">
		<xs:complexType>
			<xs:complexContent>
				<xs:extension base="elementtype">
					<xs:attribute name="name" type="nametype" use="required">
						<xs:annotation>
							<xs:documentation>Name used to identify the element. It must be unique among its siblings, and cannot contain whitespace, slashes and square brackets.</xs:documentation>
						</xs:annotation>
					</xs:attribute>
				</xs:extension>
		</xs:complexContent>
		</xs:complexType>
	</xs:element>
</xs:schema>